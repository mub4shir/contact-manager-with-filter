[{"C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\index.js":"1","C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\App.js":"2","C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\EditContact.js":"3","C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\Header.js":"4","C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\AddContact.js":"5","C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\ContactDetail.js":"6","C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\ContactList.js":"7","C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\api\\contacts.js":"8","C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\ContactCard.js":"9","C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\CSVReader.js":"10","C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\index.js":"11","C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\App.js":"12","C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\Header.js":"13","C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\EditContact.js":"14","C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\api\\contacts.js":"15","C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\AddContact.js":"16","C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\ContactList.js":"17","C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\ContactDetail.js":"18","C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\CSVReader.js":"19","C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\ContactCard.js":"20"},{"size":208,"mtime":1612603884000,"results":"21","hashOfConfig":"22"},{"size":3545,"mtime":1634726519012,"results":"23","hashOfConfig":"22"},{"size":1451,"mtime":1612603884000,"results":"24","hashOfConfig":"22"},{"size":231,"mtime":1612603884000,"results":"25","hashOfConfig":"22"},{"size":1509,"mtime":1634751351985,"results":"26","hashOfConfig":"22"},{"size":772,"mtime":1634726841527,"results":"27","hashOfConfig":"22"},{"size":1440,"mtime":1634749532367,"results":"28","hashOfConfig":"22"},{"size":119,"mtime":1634656816613,"results":"29","hashOfConfig":"22"},{"size":984,"mtime":1634750506641,"results":"30","hashOfConfig":"22"},{"size":2564,"mtime":1634751861623,"results":"31","hashOfConfig":"22"},{"size":208,"mtime":1612603884000,"results":"32","hashOfConfig":"33"},{"size":3545,"mtime":1634752633796,"results":"34","hashOfConfig":"33"},{"size":231,"mtime":1612603884000,"results":"35","hashOfConfig":"33"},{"size":1451,"mtime":1612603884000,"results":"36","hashOfConfig":"33"},{"size":119,"mtime":1634656816613,"results":"37","hashOfConfig":"33"},{"size":1509,"mtime":1634751351985,"results":"38","hashOfConfig":"33"},{"size":1496,"mtime":1634752808964,"results":"39","hashOfConfig":"33"},{"size":772,"mtime":1634726841527,"results":"40","hashOfConfig":"33"},{"size":2564,"mtime":1634751861623,"results":"41","hashOfConfig":"33"},{"size":984,"mtime":1634750506641,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"xgu0ij",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nled9u",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\index.js",[],["85","86"],"C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\App.js",["87","88"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { uuid } from 'uuidv4';\nimport api from '../api/contacts';\nimport './App.css';\nimport Header from './Header';\nimport AddContact from './AddContact';\nimport ContactList from './ContactList';\nimport ContactDetail from './ContactDetail';\nimport EditContact from './EditContact';\nimport CSVReader from './CSVReader';\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = 'contacts';\n  const [contacts, setContacts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  //RetrieveContacts\n  const retrieveContacts = async () => {\n    const response = await api.get('/');\n    return response.data;\n  };\n\n  const addContactHandler = async (contact) => {\n    console.log(contact);\n    const request = {\n      id: uuid(),\n      ...contact,\n    };\n\n    const response = await api.post('/', request);\n    console.log(response);\n    setContacts([...contacts, response.data]);\n  };\n\n  const updateContactHandler = async (contact) => {\n    const response = await api.put(`/${contact.id}`, contact);\n    const { id, name, email } = response.data;\n    setContacts(\n      contacts.map((contact) => {\n        return contact.id === id ? { ...response.data } : contact;\n      })\n    );\n  };\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  };\n\n  const searchHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if (searchTerm !== '') {\n      const newContactList = contacts.filter((contact) => {\n        return Object.values(contact)\n          .join(' ')\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n\n  useEffect(() => {\n    const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (retriveContacts) setContacts(retriveContacts);\n    const getAllCOntacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n\n    getAllCOntacts();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"ui container\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <ContactList\n                {...props}\n                contacts={searchTerm.length < 1 ? contacts : searchResults}\n                getContactId={removeContactHandler}\n                term={searchTerm}\n                searchKeyword={searchHandler}\n              />\n            )}\n          />\n          <Route\n            path=\"/add\"\n            render={(props) => (\n              <AddContact {...props} addContactHandler={addContactHandler} />\n            )}\n          />\n\n          <Route\n            path=\"/edit\"\n            render={(props) => (\n              <EditContact\n                {...props}\n                updateContactHandler={updateContactHandler}\n              />\n            )}\n          />\n\n          <Route path=\"/contact/:id\" component={ContactDetail} />\n          <Route path=\"/reader\" component={CSVReader} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\EditContact.js",[],"C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\Header.js",[],"C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\AddContact.js",[],"C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\ContactDetail.js",[],"C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\ContactList.js",[],"C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\api\\contacts.js",[],"C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\ContactCard.js",[],"C:\\Users\\mubashir\\Desktop\\Contact_Manager_App-search-bar\\src\\components\\CSVReader.js",["89","90","91"],"C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\index.js",[],"C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\App.js",["92","93"],"C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\Header.js",[],"C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\EditContact.js",[],"C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\api\\contacts.js",[],"C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\AddContact.js",[],"C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\ContactList.js",[],"C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\ContactDetail.js",[],"C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\CSVReader.js",["94","95","96"],"C:\\Users\\mubashir\\Desktop\\react_testing\\contact-manager-with-filter\\src\\components\\ContactCard.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":38,"column":17,"nodeType":"103","messageId":"104","endLine":38,"endColumn":21},{"ruleId":"101","severity":1,"message":"105","line":38,"column":23,"nodeType":"103","messageId":"104","endLine":38,"endColumn":28},{"ruleId":"106","severity":1,"message":"107","line":22,"column":33,"nodeType":"108","messageId":"109","endLine":22,"endColumn":35},{"ruleId":"106","severity":1,"message":"107","line":27,"column":22,"nodeType":"108","messageId":"109","endLine":27,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":28,"column":33,"nodeType":"108","messageId":"109","endLine":28,"endColumn":35},{"ruleId":"101","severity":1,"message":"102","line":38,"column":17,"nodeType":"103","messageId":"104","endLine":38,"endColumn":21},{"ruleId":"101","severity":1,"message":"105","line":38,"column":23,"nodeType":"103","messageId":"104","endLine":38,"endColumn":28},{"ruleId":"106","severity":1,"message":"107","line":22,"column":33,"nodeType":"108","messageId":"109","endLine":22,"endColumn":35},{"ruleId":"106","severity":1,"message":"107","line":27,"column":22,"nodeType":"108","messageId":"109","endLine":27,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":28,"column":33,"nodeType":"108","messageId":"109","endLine":28,"endColumn":35},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'email' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]